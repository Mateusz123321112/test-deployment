apiVersion: v1
data:
  data-prepper-wait-for-os-and-start.sh: |
    #!/bin/bash

    until [[ $(curl --write-out %{http_code} --output /dev/null --silent --head --fail https://opensearch-cluster-master:9200 -u admin:admin --insecure) == 200 ]]; do
      echo "Waiting for OpenSearch to be ready"
      sleep 1
    done

    java -Xms128m -Xmx128m -jar /usr/share/data-prepper/data-prepper.jar /appconfig/trace_analytics_example_pipelines.yml /appconfig/trace_analytics_no_ssl.yml
  trace_analytics_no_ssl.yml: |
    ssl: false
  trace_analytics_example_pipelines.yml: |
    entry-pipeline:
      delay: "100"
      source:
        otel_trace_source:
          ssl: false
      prepper:
        - peer_forwarder:
            discovery_mode: "dns"
            domain_name: "data-prepper-headless"
            ssl: false
      sink:
        - pipeline:
            name: "raw-pipeline"
        - pipeline:
            name: "service-map-pipeline"
    raw-pipeline:
      source:
        pipeline:
          name: "entry-pipeline"
      prepper:
        - otel_trace_raw_prepper:
      sink:
        - opensearch:
            hosts: [ "https://opensearch-cluster-master:9200" ]
            insecure: true
            username: "admin"
            password: "admin"
            trace_analytics_raw: true
    service-map-pipeline:
      delay: "100"
      source:
        pipeline:
          name: "entry-pipeline"
      prepper:
        - service_map_stateful:
      sink:
        - opensearch:
            hosts: ["https://opensearch-cluster-master:9200"]
            insecure: true
            username: "admin"
            password: "admin"
            trace_analytics_service_map: true
kind: ConfigMap
metadata:
  name: data-prepper-config
  namespace: opensearch
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: data-prepper
  name: data-prepper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-prepper
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.network/my-network: "true"
        app: data-prepper
    spec:
      containers:
      - args:
        - sh
        - /appconfig/data-prepper-wait-for-os-and-start.sh
        image: opensearchproject/data-prepper:latest
        name: data-prepper
        ports:
        - containerPort: 21890
        resources: {}
        volumeMounts:
        - mountPath: /appconfig
          name: prepper-configmap-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: prepper-configmap-claim0
        configMap:
          name: data-prepper-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: data-prepper
  name: data-prepper
spec:
  ports:
  - name: "21890"
    port: 21890
    targetPort: 21890
  selector:
    app: data-prepper
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: data-prepper
  name: data-prepper-headless
spec:
  clusterIP: None
  ports:
  - name: "21890"
    port: 21890
    targetPort: 21890
  selector:
    app: data-prepper
---